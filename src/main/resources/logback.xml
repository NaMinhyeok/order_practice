<configuration>
    <!-- 로그 파일명을 지정하는 프로퍼티 설정 -->
    <property name="LOG_FILE" value="application.log"/>

    <!-- 콘솔 출력 설정 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 로그 출력 형식 지정 -->
        <encoder>
            <!-- %d: 날짜시간, %-5level: 로그레벨, %thread: 스레드명, %logger: 로거명, %msg: 로그메시지 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 파일 출력 설정 -->
    <!-- RollingFileAppender: 파일 크기나 시간에 따라 로그 파일을 분할하여 저장 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 로그를 저장할 파일 경로 -->
        <file>${LOG_FILE}</file>

        <!-- TimeBasedRollingPolicy: 시간을 기준으로 로그 파일을 분할 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 분할된 로그 파일의 이름 패턴 지정 (날짜별로 분할) -->
            <fileNamePattern>application.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 최대 보관 일수 (30일) -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <!-- 파일에 로그를 쓸 때의 출력 형식 지정 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 루트 로거 설정 -->
    <!-- level="info": INFO 레벨 이상의 로그만 출력 (TRACE < DEBUG < INFO < WARN < ERROR) -->
    <root level="info">
        <!-- 콘솔과 파일 모두에 로그 출력 -->
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="FILE" />
    </root>
</configuration>